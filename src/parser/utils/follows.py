FOLLOW_SET = {
    "Program": ["\u0000"],
    "Declaration_list": [
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
    ],
    "Declaration": [
        "int",
        "void",
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
    ],
    "Declaration_initial": ["(", ";", "[", ",", ")"],
    "Declaration_prime": [
        "int",
        "void",
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
    ],
    "Var_declaration_prime": [
        "int",
        "void",
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
    ],
    "Fun_declaration_prime": [
        "int",
        "void",
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
    ],
    "Type_specifier": ["ID"],
    "Params": [")"],
    "Param_list": [")"],
    "Param": [",", ")"],
    "Param_prime": [",", ")"],
    "Compound_stmt": [
        "int",
        "void",
        "\u0000",
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Statement_list": ["}"],
    "Statement": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Expression_stmt": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Selection_stmt": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Else_stmt": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Iteration_stmt": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Return_stmt": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Return_stmt_prime": [
        "{",
        "break",
        ";",
        "if",
        "repeat",
        "return",
        "ID",
        "(",
        "NUM",
        "}",
        "endif",
        "else",
        "until",
    ],
    "Expression": [";", ")", "]", ","],
    "B": [";", ")", "]", ","],
    "H": [";", ")", "]", ","],
    "Simple_expression_zegond": [";", ")", "]", ","],
    "Simple_expression_prime": [";", ")", "]", ","],
    "C": [";", ")", "]", ","],
    "Relop": ["(", "ID", "NUM"],
    "Additive_expression": [";", ")", "]", ","],
    "Additive_expression_prime": ["<", "==", ";", ")", "]", ","],
    "Additive_expression_zegond": ["<", "==", ";", ")", "]", ","],
    "D": ["<", "==", ";", ")", "]", ","],
    "Addop": ["(", "ID", "NUM"],
    "Term": ["+", "-", ";", ")", "<", "==", "]", ","],
    "Term_prime": ["+", "-", "<", "==", ";", ")", "]", ","],
    "Term_zegond": ["+", "-", "<", "==", ";", ")", "]", ","],
    "G": ["+", "-", "<", "==", ";", ")", "]", ","],
    "Factor": ["*", "+", "-", ";", ")", "<", "==", "]", ","],
    "Var_call_prime": ["*", "+", "-", ";", ")", "<", "==", "]", ","],
    "Var_prime": ["*", "+", "-", ";", ")", "<", "==", "]", ","],
    "Factor_prime": ["*", "+", "-", "<", "==", ";", ")", "]", ","],
    "Factor_zegond": ["*", "+", "-", "<", "==", ";", ")", "]", ","],
    "Args": [")"],
    "Arg_list": [")"],
    "Arg_list_prime": [")"],
}
